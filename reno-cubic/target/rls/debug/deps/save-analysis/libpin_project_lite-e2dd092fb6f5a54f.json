{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10","program":"/Users/xyzhao/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","pin_project_lite","--edition=2018","/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=e2dd092fb6f5a54f","-C","extra-filename=-e2dd092fb6f5a54f","--out-dir","/Users/xyzhao/Desktop/codes/mlcc/reno-cubic/target/rls/debug/deps","-L","dependency=/Users/xyzhao/Desktop/codes/mlcc/reno-cubic/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/xyzhao/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/xyzhao/Desktop/codes/mlcc/reno-cubic/target/rls/debug/deps/libpin_project_lite-e2dd092fb6f5a54f.rmeta"},"prelude":{"crate_id":{"name":"pin_project_lite","disambiguator":[4005706136913517433,0]},"crate_root":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src","external_crates":[{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[73040408509550987,0]}},{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[25219639345723208,0]}},{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14679561342120989267,0]}}],"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":0,"byte_end":50416,"line_start":1,"line_end":1598,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":3007},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48709,"byte_end":48720,"line_start":1541,"line_end":1541,"column_start":18,"column_end":29},"alias_span":null,"name":"PhantomData","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":1,"index":3008},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48709,"byte_end":48720,"line_start":1541,"line_end":1541,"column_start":18,"column_end":29},"alias_span":null,"name":"PhantomData","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":1,"index":3030},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48722,"byte_end":48727,"line_start":1541,"line_end":1541,"column_start":31,"column_end":36},"alias_span":null,"name":"Unpin","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":1,"index":3224},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48743,"byte_end":48747,"line_start":1542,"line_end":1542,"column_start":14,"column_end":18},"alias_span":null,"name":"Drop","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":1,"index":43302},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48762,"byte_end":48765,"line_start":1543,"line_end":1543,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":1,"index":2010},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48775,"byte_end":48778,"line_start":1544,"line_end":1544,"column_start":9,"column_end":12},"alias_span":null,"name":"ptr","value":"","parent":{"krate":0,"index":28}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":0,"byte_end":50416,"line_start":1,"line_end":1598,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":"<!-- tidy:crate-doc:start -->\nA lightweight version of [pin-project] written with declarative macros.","sig":null,"attributes":[{"value":"*\n<!-- tidy:crate-doc:start -->\nA lightweight version of [pin-project] written with declarative macros.\n\n## Usage\n\nAdd this to your `Cargo.toml`:\n\n```toml\n[dependencies]\npin-project-lite = \"0.2\"\n```\n\n*Compiler support: requires rustc 1.37+*\n\n## Examples\n\n[`pin_project!`] macro creates a projection type covering all the fields of\nstruct.\n\n```rust\nuse std::pin::Pin;\n\nuse pin_project_lite::pin_project;\n\npin_project! {\n    struct Struct<T, U> {\n        #[pin]\n        pinned: T,\n        unpinned: U,\n    }\n}\n\nimpl<T, U> Struct<T, U> {\n    fn method(self: Pin<&mut Self>) {\n        let this = self.project();\n        let _: Pin<&mut T> = this.pinned; // Pinned reference to the field\n        let _: &mut U = this.unpinned; // Normal reference to the field\n    }\n}\n```\n\nTo use [`pin_project!`] on enums, you need to name the projection type\nreturned from the method.\n\n```rust\nuse std::pin::Pin;\n\nuse pin_project_lite::pin_project;\n\npin_project! {\n    #[project = EnumProj]\n    enum Enum<T, U> {\n        Variant { #[pin] pinned: T, unpinned: U },\n    }\n}\n\nimpl<T, U> Enum<T, U> {\n    fn method(self: Pin<&mut Self>) {\n        match self.project() {\n            EnumProj::Variant { pinned, unpinned } => {\n                let _: Pin<&mut T> = pinned;\n                let _: &mut U = unpinned;\n            }\n        }\n    }\n}\n```\n\n## [pin-project] vs pin-project-lite\n\nHere are some similarities and differences compared to [pin-project].\n\n### Similar: Safety\n\npin-project-lite guarantees safety in much the same way as [pin-project].\nBoth are completely safe unless you write other unsafe code.\n\n### Different: Minimal design\n\nThis library does not tackle as expansive of a range of use cases as\n[pin-project] does. If your use case is not already covered, please use\n[pin-project].\n\n### Different: No proc-macro related dependencies\n\nThis is the **only** reason to use this crate. However, **if you already\nhave proc-macro related dependencies in your crate's dependency graph, there\nis no benefit from using this crate.** (Note: There is almost no difference\nin the amount of code generated between [pin-project] and pin-project-lite.)\n\n### Different: No useful error messages\n\nThis macro does not handle any invalid input. So error messages are not to\nbe useful in most cases. If you do need useful error messages, then upon\nerror you can pass the same input to [pin-project] to receive a helpful\ndescription of the compile error.\n\n### Different: No support for custom Unpin implementation\n\npin-project supports this by [`UnsafeUnpin`][unsafe-unpin] and [`!Unpin`][not-unpin].\n\n### Different: No support for tuple structs and tuple variants\n\npin-project supports this.\n\n[not-unpin]: https://docs.rs/pin-project/1/pin_project/attr.pin_project.html#unpin\n[pin-project]: https://github.com/taiki-e/pin-project\n[unsafe-unpin]: https://docs.rs/pin-project/1/pin_project/attr.pin_project.html#unsafeunpin\n\n<!-- tidy:crate-doc:end -->\n*/","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":0,"byte_end":2931,"line_start":1,"line_end":112,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":2933,"byte_end":2943,"line_start":114,"line_end":114,"column_start":1,"column_end":11}},{"value":"warn(rust_2018_idioms, single_use_lifetimes, unreachable_pub)","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":3105,"byte_end":3170,"line_start":122,"line_end":122,"column_start":1,"column_end":66}},{"value":"warn(clippy :: pedantic, clippy :: alloc_instead_of_core, clippy ::\n       exhaustive_enums, clippy :: exhaustive_structs, clippy ::\n       std_instead_of_alloc, clippy :: std_instead_of_core, clippy ::\n       as_ptr_cast_mut, clippy :: default_union_representation, clippy ::\n       trailing_empty_array, clippy :: transmute_undefined_repr, clippy ::\n       undocumented_unsafe_blocks,)","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":3171,"byte_end":3626,"line_start":123,"line_end":137,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48608,"byte_end":48617,"line_start":1537,"line_end":1537,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":69},{"krate":0,"index":72}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48887,"byte_end":48898,"line_start":1549,"line_end":1549,"column_start":16,"column_end":27},"name":"AlwaysUnpin","qualname":"::__private::AlwaysUnpin","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49080,"byte_end":49102,"line_start":1555,"line_end":1555,"column_start":16,"column_end":38},"name":"UnsafeDropInPlaceGuard","qualname":"::__private::UnsafeDropInPlaceGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49217,"byte_end":49220,"line_start":1559,"line_end":1559,"column_start":23,"column_end":26},"name":"new","qualname":"<UnsafeDropInPlaceGuard<T>>::new","value":"pub unsafe fn new(*mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49772,"byte_end":49792,"line_start":1577,"line_end":1577,"column_start":16,"column_end":36},"name":"UnsafeOverwriteGuard","qualname":"::__private::UnsafeOverwriteGuard","value":"UnsafeOverwriteGuard {  }","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49944,"byte_end":49947,"line_start":1584,"line_end":1584,"column_start":23,"column_end":26},"name":"new","qualname":"<UnsafeOverwriteGuard<T>>::new","value":"pub unsafe fn new(*mut T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48958,"byte_end":48969,"line_start":1551,"line_end":1551,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49144,"byte_end":49166,"line_start":1557,"line_end":1557,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49312,"byte_end":49334,"line_start":1564,"line_end":1564,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49873,"byte_end":49893,"line_start":1582,"line_end":1582,"column_start":13,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":50083,"byte_end":50103,"line_start":1589,"line_end":1589,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":48958,"byte_end":48969,"line_start":1551,"line_end":1551,"column_start":31,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":3030}},{"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49144,"byte_end":49166,"line_start":1557,"line_end":1557,"column_start":21,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49312,"byte_end":49334,"line_start":1564,"line_end":1564,"column_start":30,"column_end":52},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":49873,"byte_end":49893,"line_start":1582,"line_end":1582,"column_start":13,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xyzhao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.10/src/lib.rs","byte_start":50083,"byte_end":50103,"line_start":1589,"line_end":1589,"column_start":22,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":3224}}]}